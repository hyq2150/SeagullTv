package com.victor.seagull;import android.annotation.TargetApi;import android.content.Intent;import android.graphics.Color;import android.os.Build;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.support.design.widget.CollapsingToolbarLayout;import android.support.v7.widget.OrientationHelper;import android.support.v7.widget.RecyclerView;import android.support.v7.widget.StaggeredGridLayoutManager;import android.support.v7.widget.Toolbar;import android.view.View;import android.view.Window;import android.view.WindowManager;import android.view.animation.Animation;import android.view.animation.AnimationUtils;import android.widget.AdapterView;import android.widget.ImageView;import com.victor.adapter.ProgramAdapter;import com.victor.data.ProgramData;import java.util.ArrayList;import java.util.List;public class CategoryActivity extends BaseActivity implements AdapterView.OnItemClickListener{    private View view;    private RecyclerView mRvCategory;    private List<ProgramData> programDatas = new ArrayList<>();    private StaggeredGridLayoutManager staggeredGridLayoutManager;    private ProgramAdapter programAdapter;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        view = getLayoutInflater().from(this).inflate(R.layout.activity_category,null);        setContentView(view);        initialize();        initData();    }    private void initialize () {        final Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);        setSupportActionBar(toolbar);        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        CollapsingToolbarLayout collapsingToolbar =                (CollapsingToolbarLayout) findViewById(R.id.collapsing_toolbar);        collapsingToolbar.setTitle("从你的全世界路过");        mRvCategory = (RecyclerView) view.findViewById(R.id.rv_categories);        staggeredGridLayoutManager = new StaggeredGridLayoutManager(2, OrientationHelper.VERTICAL);//这里用线性宫格显示 类似于瀑布流        mRvCategory.setLayoutManager(staggeredGridLayoutManager);        programAdapter = new ProgramAdapter(this,this);        programAdapter.setProgramDatas(programDatas);        programAdapter.setHeaderVisible(false);        programAdapter.setFooterVisible(false);        mRvCategory.setAdapter(programAdapter);    }    private void initData () {        String[] titles = getResources().getStringArray(R.array.program_list);        for (int i=0;i<titles.length;i++) {            ProgramData info = new ProgramData();            info.title = titles[i];            if (i % 2 == 0) {                info.imgId = R.mipmap.default_img;            } else {                info.imgId = R.mipmap.img_header;            }            programDatas.add(info);        }        programAdapter.notifyDataSetChanged();    }    @Override    public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {    }    @TargetApi(Build.VERSION_CODES.LOLLIPOP)    @Override    protected void onResume() {        super.onResume();        Window window = getWindow();        window.setStatusBarColor(Color.TRANSPARENT);    }}